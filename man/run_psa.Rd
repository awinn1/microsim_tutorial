% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/run_psa.R
\name{run_psa}
\alias{run_psa}
\title{reduce computation time.}
\usage{
run_psa(
  df_ukpds_bootstraps = microsim.tutorial::df_ukpds_bootstraps,
  df_ukpds_coef = microsim.tutorial::df_ukpds_coef,
  m_ukpds_pop = microsim.tutorial::m_ukpds_pop,
  num_i,
  num_cycles = 20,
  parallel = TRUE,
  n_cores = NULL
)
}
\arguments{
\item{df_ukpds_bootstraps}{A data frame where each row represents a complete
set of bootstrapped parameters for one PSA iteration.}

\item{df_ukpds_coef}{A data frame containing the base model coefficients, which
will be used as a template and updated in each iteration.}

\item{m_ukpds_pop}{A matrix containing the baseline patient population
characteristics for the microsimulation.}

\item{num_i}{An integer specifying the number of individuals to simulate in
each microsimulation run.}

\item{num_cycles}{An integer specifying the number of cycles (e.g., years)
for each microsimulation run.}

\item{parallel}{A logical value. If \code{TRUE} (the default), the PSA will be run
in parallel across multiple CPU cores.}

\item{n_cores}{An optional integer specifying the number of cores to use for
parallel execution. If \code{NULL}, the function will attempt to use half of the
available cores.}
}
\value{
A nested list containing the results. The top-level list has one element per
parallel worker. Each of these elements is a list containing the results from
\code{run_microsimC} for each PSA iteration processed by that worker.
}
\description{
reduce computation time.
}
\details{
The function performs the following steps:
\enumerate{
\item Sets up a parallel backend if \code{parallel = TRUE}, automatically detecting
and managing the number of CPU cores to use. It provides informative
messages and warnings about the parallel setup.
\item Splits the bootstrap parameter sets among the parallel workers.
\item For each parameter set (i.e., each row in \code{df_ukpds_bootstraps}), it:
a.  Updates the base coefficients using \code{update_coef_with_bootstrap()}.
b.  Creates the necessary 3D arrays using \code{create_ukpds_arrays()}.
c.  Runs the core microsimulation model (\code{run_microsimC()}).
\item The results are aggregated into a nested list.
}
}
\examples{
\dontrun{
# This is a conceptual example as it is computationally intensive and
# requires several large data objects to be defined.

# Assume df_boots, df_coef, and pop_matrix are all correctly defined.

# Run the PSA for 100 individuals across all bootstrap sets in parallel
psa_results <- microsim.tutorial::run_psa(
  df_ukpds_bootstraps = microsim.tutorial::df_ukpds_bootstraps,
  df_ukpds_coef = microsim.tutorial::df_ukpds_coef,
  m_ukpds_pop = microsim.tutorial::m_ukpds_pop,
  num_i = 25,
  num_cycles = 20,
  parallel = TRUE
)
}

}
\seealso{
\code{update_coef_with_bootstrap()}, \code{create_ukpds_arrays()}, \code{run_microsimC()}
}
