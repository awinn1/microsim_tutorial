// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// gompertz_eventC
arma::umat gompertz_eventC(arma::mat& m_ind_traits, const arma::mat& m_coef_ukpds_ind_traits, const arma::mat& m_coef_ukpds_other_ind_traits, int health_outcome_index);
RcppExport SEXP _microsim_tutorial_gompertz_eventC(SEXP m_ind_traitsSEXP, SEXP m_coef_ukpds_ind_traitsSEXP, SEXP m_coef_ukpds_other_ind_traitsSEXP, SEXP health_outcome_indexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type m_ind_traits(m_ind_traitsSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type m_coef_ukpds_ind_traits(m_coef_ukpds_ind_traitsSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type m_coef_ukpds_other_ind_traits(m_coef_ukpds_other_ind_traitsSEXP);
    Rcpp::traits::input_parameter< int >::type health_outcome_index(health_outcome_indexSEXP);
    rcpp_result_gen = Rcpp::wrap(gompertz_eventC(m_ind_traits, m_coef_ukpds_ind_traits, m_coef_ukpds_other_ind_traits, health_outcome_index));
    return rcpp_result_gen;
END_RCPP
}
// logistic_eventC
arma::umat logistic_eventC(arma::mat& m_ind_traits, arma::mat& m_coef_ukpds_ind_traits, arma::mat& m_coef_ukpds_other_ind_traits, int health_outcome_index);
RcppExport SEXP _microsim_tutorial_logistic_eventC(SEXP m_ind_traitsSEXP, SEXP m_coef_ukpds_ind_traitsSEXP, SEXP m_coef_ukpds_other_ind_traitsSEXP, SEXP health_outcome_indexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type m_ind_traits(m_ind_traitsSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type m_coef_ukpds_ind_traits(m_coef_ukpds_ind_traitsSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type m_coef_ukpds_other_ind_traits(m_coef_ukpds_other_ind_traitsSEXP);
    Rcpp::traits::input_parameter< int >::type health_outcome_index(health_outcome_indexSEXP);
    rcpp_result_gen = Rcpp::wrap(logistic_eventC(m_ind_traits, m_coef_ukpds_ind_traits, m_coef_ukpds_other_ind_traits, health_outcome_index));
    return rcpp_result_gen;
END_RCPP
}
// mortalityCz
arma::mat mortalityCz(arma::mat& m_ind_traits, arma::mat& m_other_ind_traits, arma::mat& m_other_ind_traits_previous, arma::mat& m_coef_ukpds_ind_traits, arma::mat& m_coef_ukpds_other_ind_traits);
RcppExport SEXP _microsim_tutorial_mortalityCz(SEXP m_ind_traitsSEXP, SEXP m_other_ind_traitsSEXP, SEXP m_other_ind_traits_previousSEXP, SEXP m_coef_ukpds_ind_traitsSEXP, SEXP m_coef_ukpds_other_ind_traitsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type m_ind_traits(m_ind_traitsSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type m_other_ind_traits(m_other_ind_traitsSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type m_other_ind_traits_previous(m_other_ind_traits_previousSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type m_coef_ukpds_ind_traits(m_coef_ukpds_ind_traitsSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type m_coef_ukpds_other_ind_traits(m_coef_ukpds_other_ind_traitsSEXP);
    rcpp_result_gen = Rcpp::wrap(mortalityCz(m_ind_traits, m_other_ind_traits, m_other_ind_traits_previous, m_coef_ukpds_ind_traits, m_coef_ukpds_other_ind_traits));
    return rcpp_result_gen;
END_RCPP
}
// mortalityC
arma::mat mortalityC(arma::mat& m_ind_traits, arma::mat& m_other_ind_traits, arma::mat& m_other_ind_traits_previous, arma::mat& m_coef_ukpds_ind_traits, arma::mat& m_coef_ukpds_other_ind_traits);
RcppExport SEXP _microsim_tutorial_mortalityC(SEXP m_ind_traitsSEXP, SEXP m_other_ind_traitsSEXP, SEXP m_other_ind_traits_previousSEXP, SEXP m_coef_ukpds_ind_traitsSEXP, SEXP m_coef_ukpds_other_ind_traitsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type m_ind_traits(m_ind_traitsSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type m_other_ind_traits(m_other_ind_traitsSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type m_other_ind_traits_previous(m_other_ind_traits_previousSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type m_coef_ukpds_ind_traits(m_coef_ukpds_ind_traitsSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type m_coef_ukpds_other_ind_traits(m_coef_ukpds_other_ind_traitsSEXP);
    rcpp_result_gen = Rcpp::wrap(mortalityC(m_ind_traits, m_other_ind_traits, m_other_ind_traits_previous, m_coef_ukpds_ind_traits, m_coef_ukpds_other_ind_traits));
    return rcpp_result_gen;
END_RCPP
}
// update_biomarkersC
arma::mat update_biomarkersC(arma::mat& m_ind_traits, arma::mat& m_coef_ukpds_ind_traits, arma::mat& m_coef_ukpds_other_ind_traits);
RcppExport SEXP _microsim_tutorial_update_biomarkersC(SEXP m_ind_traitsSEXP, SEXP m_coef_ukpds_ind_traitsSEXP, SEXP m_coef_ukpds_other_ind_traitsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type m_ind_traits(m_ind_traitsSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type m_coef_ukpds_ind_traits(m_coef_ukpds_ind_traitsSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type m_coef_ukpds_other_ind_traits(m_coef_ukpds_other_ind_traitsSEXP);
    rcpp_result_gen = Rcpp::wrap(update_biomarkersC(m_ind_traits, m_coef_ukpds_ind_traits, m_coef_ukpds_other_ind_traits));
    return rcpp_result_gen;
END_RCPP
}
// update_health_eventsC
Rcpp::NumericMatrix update_health_eventsC(Rcpp::NumericMatrix m_ind_traits, Rcpp::NumericMatrix m_coef_ukpds_ind_traits, Rcpp::NumericMatrix m_coef_ukpds_other_ind_traits);
RcppExport SEXP _microsim_tutorial_update_health_eventsC(SEXP m_ind_traitsSEXP, SEXP m_coef_ukpds_ind_traitsSEXP, SEXP m_coef_ukpds_other_ind_traitsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type m_ind_traits(m_ind_traitsSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type m_coef_ukpds_ind_traits(m_coef_ukpds_ind_traitsSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type m_coef_ukpds_other_ind_traits(m_coef_ukpds_other_ind_traitsSEXP);
    rcpp_result_gen = Rcpp::wrap(update_health_eventsC(m_ind_traits, m_coef_ukpds_ind_traits, m_coef_ukpds_other_ind_traits));
    return rcpp_result_gen;
END_RCPP
}
// weibull_eventC
arma::umat weibull_eventC(arma::mat& m_ind_traits, arma::mat& m_coef_ukpds_ind_traits, arma::mat& m_coef_ukpds_other_ind_traits, int health_outcome_index);
RcppExport SEXP _microsim_tutorial_weibull_eventC(SEXP m_ind_traitsSEXP, SEXP m_coef_ukpds_ind_traitsSEXP, SEXP m_coef_ukpds_other_ind_traitsSEXP, SEXP health_outcome_indexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type m_ind_traits(m_ind_traitsSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type m_coef_ukpds_ind_traits(m_coef_ukpds_ind_traitsSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type m_coef_ukpds_other_ind_traits(m_coef_ukpds_other_ind_traitsSEXP);
    Rcpp::traits::input_parameter< int >::type health_outcome_index(health_outcome_indexSEXP);
    rcpp_result_gen = Rcpp::wrap(weibull_eventC(m_ind_traits, m_coef_ukpds_ind_traits, m_coef_ukpds_other_ind_traits, health_outcome_index));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_microsim_tutorial_gompertz_eventC", (DL_FUNC) &_microsim_tutorial_gompertz_eventC, 4},
    {"_microsim_tutorial_logistic_eventC", (DL_FUNC) &_microsim_tutorial_logistic_eventC, 4},
    {"_microsim_tutorial_mortalityCz", (DL_FUNC) &_microsim_tutorial_mortalityCz, 5},
    {"_microsim_tutorial_mortalityC", (DL_FUNC) &_microsim_tutorial_mortalityC, 5},
    {"_microsim_tutorial_update_biomarkersC", (DL_FUNC) &_microsim_tutorial_update_biomarkersC, 3},
    {"_microsim_tutorial_update_health_eventsC", (DL_FUNC) &_microsim_tutorial_update_health_eventsC, 3},
    {"_microsim_tutorial_weibull_eventC", (DL_FUNC) &_microsim_tutorial_weibull_eventC, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_microsim_tutorial(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
